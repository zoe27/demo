---
name: drone
kind: pipeline
type: docker

volumes:
  - name: targetJar
    host:
      path: /home/repository  # the machine directory

steps:
#  - name: build
#    image: redis:6.2.1
#    commands:
#    - echo "hello world"
#    - echo "this is the first time to test drone"

#  - name: test
#    image: maven:3-jdk-8
#    volumes:
#      - name: targetJar
#        path: /drone/src/target # the container directory
#    commands:
#      - mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
##      - rm -rf `ls /drone/src/target/ | grep -v jar`
#      - pwd
#      - ls
#      - cd target
##      - cp *.jar
#      - rm -rf !\(*.jar\)

#  - name: publish
#    image: plugins/docker
##    volumes:
##      - name: targetJar
##        path: /var/lib # the container directory
#    settings:
#      repo: zoe27/demo
#      tags: latest
#      dockerfile: dockerfilev1
#      username:
#        from_secret: push_user
#      password:
#        from_secret: push_pass

  - name: deploy
    image: appleboy/drone-ssh
    host:
      - 204.44.87.9
    username:
      from_secret: user
    password:
      from_secret: pass
    port: 22
    command_timeout: 300 # ssh命令行执行超时时间，300秒
    script:
      - docker pull zoe27/demo:latest
#      - docker rm -f docker-demo || true # 这里这样是因为如果不存在docker-demo，rm会报错
      - docker run -d -p 8065:8065 --name docker-demo zoe27/demo



trigger:
  branch:
    - master
  event:
    - push


---
name: drone
kind: pipeline
type: docker

volumes:
  - name: targetJar
    host:
      path: /home/repository  # the machine directory

service:
  - name: database
    image: mysql
    container_name: my_mysql_1
    volumes:
      - ./mydir:/mydir
      - ./datadir:/var/lib/mysql
      - ./conf/my.cnf:/etc/my.cnf
      - ~/root/docker:/docker-entrypoint-initdb.d
    environment:
      - "MYSQL_ROOT_PASSWORD=123456"
      - "MYSQL_DATABASE=mydb"
      - "TZ=Asia/Shanghai"
    ports:
      - 3308:3306

steps:
#  - name: publish
#    image: plugins/docker
##    volumes:
##      - name: targetJar
##        path: /var/lib # the container directory
#    settings:
#      repo: zoe27/demo
#      tags: latest
#      dockerfile: dockerfilev1
#      username:
#        from_secret: push_user
#      password:
#        from_secret: push_pass

  - name: mysql
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: host
      username:
        from_secret: user
      password:
        from_secret: pass
      port: 22
      #      command_timeout: "300" # ssh命令行执行超时时间，300秒
      script:
        docker run -d -p 4306:3306 \
        --restart always \
        --privileged=true \
        --name mysql \
        -e MYSQL_USER="root" \
        -e MYSQL_PASSWORD="123456" \
        -e MYSQL_ROOT_PASSWORD="123456" \
        -v=./mydir:/mydir \
        -v=./datadir:/var/lib/mysql \
        -v=./conf/my.cnf:/etc/my.cnf \
        -v=~/root/docker:/docker-entrypoint-initdb.d \
        mysql/mysql-server

#  - name: deploy
#    image: appleboy/drone-ssh
#    settings:
#      host:
#        from_secret: host
#      username:
#        from_secret: user
#      password:
#        from_secret: pass
#      port: 22
##      command_timeout: "300" # ssh命令行执行超时时间，300秒
#      script:
#        - cd /home/repository
#        - docker pull zoe27/demo:latest
#        - docker rm -f salary-service || true # 这里这样是因为如果不存在docker-demo，rm会报错
#        - docker run -d -p 80:8089 --name salary-service zoe27/demo

  - name: test
    image: mysql
    commands:
      - sleep 150
      - mysql -u root -h database --execute="SELECT VERSION();"



trigger:
  branch:
    - master
  event:
    - push

